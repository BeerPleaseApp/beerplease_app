/**
 * Styleguide Mixins
 * @desc      Fonctions LESS
 * @name      mixins.less
 * @author    KB, MM
 */

/*
Cacher le texte de son conteneur

Styleguide Mixins - 10. Cacher le texte
*/
.ir() {
    display: block;
    font: ~"0/0" a;
    color: transparent;
    text-shadow: none;
    background-color: transparent;
    border: 0;
}

/*
Créer une transition entre deux états d'un élément

@arguments        - Paramètres de la transition

Styleguide Mixins - 20. Transition entre deux états d'un élément
*/
.transition(@arguments) {
    -webkit-transition: @arguments;
    transition: @arguments;
}

/*
Gérer la transparence/opacité d'un élément

@opacity          - Opacité d'un élément de 0 (transparent) à 1 (opaque)

Styleguide Mixins - 30. Transparence/opacité d'un élément
*/
.opacity(@opacity) {
    opacity: @opacity;
    @opacityPercentage: @opacity * 100;
    filter: ~"alpha(opacity=@{opacityPercentage})";
}

/*
Gérer la rotation d'un élément

@deg              - Rotation en degrés d'un élément (unité = deg)

Styleguide Mixins - 40. Rotation d'un élément
*/
.rotate(@deg) {
    -webkit-transform: rotate(@deg);
    -moz-transform: rotate(@deg);
    transform: rotate(@deg);
}

/*
Gérer l'échelle (modification proportionnée de la taille) d'un élément

@ratio              - Ratio scale (0.5 = 50%, 1 = 100%, 1.5 = 150%)

Styleguide Mixins - 50. Echelle / taille proportionnée d'un élément
*/
.scale(@ratio) {
    -webkit-transform: scale(@ratio);
    -ms-transform: scale(@ratio);
    transform: scale(@ratio);
}

/*
Gérer le déplacement en 3d

@x - Axe des abscisses X
@y - Axe des ordonnées Y
@z - Axe de la profondeur Z

Styleguide Mixins - 60. Position et déplacement sur 3 axes d'un élément
*/
.translate3d(@x, @y: 0, @z: 0) {
    -webkit-transform: translate3d(@x, @y, @z);
    -ms-transform: translate3d(@x, @y, @z);
    transform: translate3d(@x, @y, @z);
}

/*
Gérer le déplacement en 2d

@x - Axe des abscisses X
@y - Axe des ordonnées Y

Styleguide Mixins - 61. Position et déplacement sur 3 axes d'un élément
*/
.translate(@x, @y: 0) {
    -webkit-transform: translate(@x, @y);
    -ms-transform: translate(@x, @y);
    transform: translate(@x, @y);
}

/*
Gérer la position et le déplacement sur l'axe X d'un élément

@x                - Axe des abscisses X

Styleguide Mixins - 65. Position et déplacement sur l'axe X
*/
.translateX(@x) {
    -webkit-transform: translateX(@x);
    -ms-transform: translateX(@x);
    transform: translateX(@x);
}

/*
Gérer la position et le déplacement sur l'axe Y d'un élément

@y                - Axe des ordonnées Y

Styleguide Mixins - 66. Position et déplacement sur l'axe Y
*/
.translateY(@y) {
    -webkit-transform: translateY(@y);
    -ms-transform: translateY(@y);
    transform: translateY(@y);
}

/*
Dégradé vertical

@start-color              - Couleur de départ (default = #555)
@end-color                - Couleur de fin (default = #333) : couleur également utilisée en fallback
@start-percent            - Niveau de départ de la couleur top en pourcentage (default = 0%)
@end-percent              - Niveau de fin de la couleur bottom en pourcentage (default = 100%)

Styleguide Mixins - 70. Dégradé vertical
*/
.gradient-vertical(@start-color: #555, @end-color: #333, @start-percent: 0%, @end-percent: 100%) {
    background: @end-color;
    background: -webkit-linear-gradient(top, @start-color @start-percent, @end-color @end-percent);
    background: linear-gradient(to bottom, @start-color @start-percent, @end-color @end-percent);
}

/*
Dégradé horizontal

@start-color              - Couleur de départ (default = #555)
@end-color                - Couleur de fin (default = #333) : couleur également utilisée en fallback
@start-percent            - Niveau de départ de la couleur top en pourcentage (default = 0%)
@end-percent              - Niveau de fin de la couleur bottom en pourcentage (default = 100%)

Styleguide Mixins - 80. Dégradé horizontal
*/
.gradient-horizontal(@start-color: #555, @end-color: #333, @start-percent: 0%, @end-percent: 100%) {
    background: @end-color;
    background: -webkit-linear-gradient(left, @start-color @start-percent, @end-color @end-percent);
    background: linear-gradient(to right, @start-color @start-percent, @end-color @end-percent);
}

/*
Dégradé radial

@start-color              - Couleur de départ
@end-color                - Couleur de fin : couleur également utilisée en fallback

Styleguide Mixins - 90. Dégradé radial
*/
.gradient-radial(@start-color, @end-color) {
    background: @end-color;
    background: -webkit-radial-gradient(center, ellipse cover, @start-color 0%, @end-color 100%);
    background: radial-gradient(ellipse at center, @start-color 0%, @end-color 100%);
}

/*
Modèle de boîte CSS utilisé pour calculer la largeur et la hauteur des éléments

@type        - Valeur de la propriété box-sizing (border-box par défaut)

Styleguide Mixins - 100. Modèle de boîte (boxSizing)
*/
.box-sizing(@type: border-box) {
    -webkit-box-sizing: @type;
    -moz-box-sizing: @type;
    box-sizing: @type;
}

/*
Filter

@type        - Type de filtre (greyscale, blur, sepia, contrast, etc)
@value       - Pourcentage d'opacité du filtre (defaut = 100%)

Styleguide Mixins - 110. Filter
 */
.filter(@type, @value: 100%) {
    -webkit-filter: ~"@{type}(@{value})";
    -moz-filter: ~"@{type}(@{value})";
    -ms-filter: ~"@{type}(@{value})";
    filter: ~"@{type}(@{value})";
}


/*
Font

@name        - Nom de la font : primary, secondary
@weight      - light, normal, bold

Styleguide Mixins - 120. Font
 */
.font(@name, @weight: @base-font-weight) {
    font-family: "@{font-@{name}-@{weight}}", @fontFallback;
}
.font(@name, @weight: @base-font-weight) when (@weight = bold) {
    font-weight: normal;
}

/*
Font size

@require @base-fontsize
@size (int) - Taille du texte référence (pixel) sans unité

Styleguide Mixins - 125. Pixel to em
 */
.font-size(@size) {
    font-size: @size * 1em / @base-fontsize;
}

/*
Transform

@arguments - Paramètres de la transformation

Styleguide Mixins - 130. Transform
 */
.transform(@arguments) {
    -webkit-transform: @arguments;
    -ms-transform: @arguments;
    transform: @arguments;
}


/*
Transform-origin

@arguments - Paramètres de l'origine de la transformation

Styleguide Mixins - 131. Transform-origin
 */
.transform-origin(@arguments) {
    -webkit-transform-origin: @arguments;
    -ms-transform-origin: @arguments;
    transform-origin: @arguments;
}



/*
column-wrapper

@gutter - Largeur entre chaque colonne
@breakpoint - Point de rupture pour le responsive

Styleguide Mixins - 140. Mixins de grille
 */
.col-wrapper(@gutter: @grid-gutter, @breakpoint: @smartphone-max) {
    clear: both;
    margin-left:  (@gutter / -2);
    margin-right: (@gutter / -2);

    @media (max-width: @breakpoint) {
        margin-left: auto;
        margin-right: auto;
    }
}

/*
column-item

@float - Valeur du float

Styleguide Mixins - 141. Mixins de grille
 */
.col-item(@float: left) {
    float: @float;
    min-height: 1px;
    .box-sizing();
}

/*
column-screen pour tous les écrans

@columns - Nombre de colonne
@gutter-left - Marge intérieur à gauche
@gutter-right - Marge intérieur à droite
@margin-bottom - Marge externe basse

Styleguide Mixins - 142. Mixins de grille
 */
.col(@columns, @gutter-left: @grid-gutter, @gutter-right: @grid-gutter, @margin-bottom: @grid-gutter) {
    padding-left: (@gutter-left / 2);
    padding-right: (@gutter-right / 2);
    margin-bottom: (@margin-bottom);
    width: percentage((@columns / @grid-columns));

    @clear-item : floor(12 / @columns);
    &:nth-of-type(@{clear-item}n + 1) {
        clear: left;
    }
}

/*
RGBA
 */
.bg-alpha(@color, @opacity: .5) {
   background-color: @color;
   background-color: rgba(red(@color), green(@color), blue(@color), @opacity);
}
.color-alpha(@color, @opacity: .5) {
   color: @color;
   color: rgba(red(@color), green(@color), blue(@color), @opacity);
}